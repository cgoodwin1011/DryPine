PostId  Parent
0       -1
1       -1
2       -1
3       2
4       3
5       0
6       2
7       9
8       4
9       -1
10      1
11      9
12      -1
13      7
14      8
15      12


orderby parent, then sort by Parent
PostId  Parent
0       -1
1       -1
2       -1
9       -1
12      -1
5       0
10      1
3       2
6       2
4       3
7       9
8       4
13      7
14      8
11      9
15      12

lets make these pairs
(0, -1)
(1, -1)
(2, -1)
(9, -1)
(12, -1)
(5, 0)
(10, 1)
(3, 2)
(6, 2)
(4, 3)
(7, 9)
(8, 4)
(13, 7)
(14, 8)
(11, 9)
(15, 12)

stack... moving from end to front...(only moving stacks with length 1)
(0, -1)  (5, 0) 
(1, -1)  (10, 1)
(2, -1)  (6, 2)
(9, -1)  (11, 9)
(12, -1) (15, 12)
(3, 2)   (4, 3) 
(7, 9)   (13, 7)
(8, 4)   (14, 8)

...continuing...
[(0, -1)  (5, 0)]
[(1, -1)  (10, 1)]
[(2, -1)  (6, 2)]
[(9, -1)  (11, 9)] [(7, 9)   (13, 7)] 
[(12, -1) (15, 12)]
[(3, 2)   (4, 3) ] [(8, 4)   (14, 8)]

... continuing.... 
[(0, -1)  (5, 0)]
[(1, -1)  (10, 1)]
[(2, -1)  (6, 2)]
    [(3, 2)   (4, 3) ] [(8, 4)   (14, 8)]
[(9, -1)  (11, 9)] [(7, 9)   (13, 7)] 
[(12, -1) (15, 12)]

---------------------------------------------------------
lets make these pairs
(0, -1)
(1, -1)
(2, -1)
(9, -1)
(12, -1)
(5, 0)
(10, 1)
(3, 2)
(6, 2)
(4, 3)
(7, 9)
(8, 4)
(13, 7)
(14, 8)
(11, 9)
(15, 12)

stack on parent from top
(0, -1) (5, 0)
(1, -1) (1, -1) 
(2, -1) (3, 2) (6, 2)
(9, -1) (7, 9)
(12, -1)




(4, 3) (8, 4)


(13, 7)
(14, 8)
(11, 9)
------------


